


alter table CHITIETHOADON
   drop constraint FK_CHITIETH_CHITIETHO_DICHVU;

alter table CHITIETHOADON
   drop constraint FK_CHITIETH_CHITIETHO_HOADON;

alter table HOADON
   drop constraint FK_HOADON_HOADON_PH_PHONG;

alter table HOADON
   drop constraint FK_HOADON_LAP_NHANVIEN;

alter table HOADON
   drop constraint FK_HOADON_NHAN_KHACHHAN;

alter table KHACHHANG
   drop constraint FK_KHACHHAN_THUOC__LOAIKHAC;

alter table PHIEUDATPHONG
   drop constraint FK_PHIEUDAT_DAT_NHANVIEN;

alter table PHIEUDATPHONG
   drop constraint FK_PHIEUDAT_DAT_TRUOC_KHACHHAN;

alter table PHIEUDATPHONG
   drop constraint FK_PHIEUDAT_PHONG_PHI_PHONG;

alter table PHONG
   drop constraint FK_PHONG_THUOCC_LOAIPHON;

alter table TAIKHOAN
   drop constraint FK_TAIKHOAN_CO_NHANVIEN;

alter table TAIKHOAN
   drop constraint FK_TAIKHOAN_THUOC_LOAITAIK;

drop index CHITIETHOADON2_FK;

drop index CHITIETHOADON_FK;

drop table CHITIETHOADON cascade constraints;

drop table DICHVU cascade constraints;

drop index LAP_FK;

drop index HOADON_PHONG_FK;

drop index NHAN_FK;

drop table HOADON cascade constraints;

drop index THUOC__FK;

drop table KHACHHANG cascade constraints;

drop table LOAIKHACHHANG cascade constraints;

drop table LOAIPHONG cascade constraints;

drop table LOAITAIKHOAN cascade constraints;

drop table NHANVIEN cascade constraints;

drop index DAT_FK;

drop index DAT_TRUOC_FK;

drop index PHONG_PHIEUDATPHONG_FK;

drop table PHIEUDATPHONG cascade constraints;

drop index THUOCC_FK;

drop table PHONG cascade constraints;

drop index THUOC_FK;

drop index CO_FK;

drop table TAIKHOAN cascade constraints;

/*==============================================================*/
/* Table: CHITIETHOADON                                         */
/*==============================================================*/
create table CHITIETHOADON (
   MADICHVU             INTEGER               not null,
   MAHOADON             INTEGER               not null,
   SOLUONG              NUMBER(5)             not null,
   THANHTIEN            NUMBER(15)            not null,
   constraint PK_CHITIETHOADON primary key (MADICHVU, MAHOADON)
);

/*==============================================================*/
/* Index: CHITIETHOADON_FK                                      */
/*==============================================================*/
create index CHITIETHOADON_FK on CHITIETHOADON (
   MADICHVU ASC
);

/*==============================================================*/
/* Index: CHITIETHOADON2_FK                                     */
/*==============================================================*/
create index CHITIETHOADON2_FK on CHITIETHOADON (
   MAHOADON ASC
);

/*==============================================================*/
/* Table: DICHVU                                                */
/*==============================================================*/
create table DICHVU (
   MADICHVU             INTEGER               not null,
   TENDICHVU            NVARCHAR2(50)         not null,
   GIATIEN              NUMBER(15)            not null,
   TRANGTHAI            NVARCHAR2(50)         not null,
   constraint PK_DICHVU primary key (MADICHVU)
);

/*==============================================================*/
/* Table: HOADON                                                */
/*==============================================================*/
create table HOADON (
   MAHOADON             INTEGER               not null,
   MAPHONG              INTEGER               not null,
   MAKHACHHANG          INTEGER               not null,
   MANHANVIEN           INTEGER               not null,
   TIENPHONG            NUMBER(15)            not null,
   TIENDICHVU           NUMBER(15)            not null,
   TONGTIEN             NUMBER(15)            not null,
   NGAYDEN              DATE                  not null,
   NGAYDI               DATE                  not null,
   TRANGTHAI            NVARCHAR2(50)         not null,
   constraint PK_HOADON primary key (MAHOADON)
);

/*==============================================================*/
/* Index: NHAN_FK                                               */
/*==============================================================*/
create index NHAN_FK on HOADON (
   MAKHACHHANG ASC
);

/*==============================================================*/
/* Index: HOADON_PHONG_FK                                       */
/*==============================================================*/
create index HOADON_PHONG_FK on HOADON (
   MAPHONG ASC
);

/*==============================================================*/
/* Index: LAP_FK                                                */
/*==============================================================*/
create index LAP_FK on HOADON (
   MANHANVIEN ASC
);

/*==============================================================*/
/* Table: KHACHHANG                                             */
/*==============================================================*/
create table KHACHHANG (
   MAKHACHHANG          INTEGER               not null,
   MALOAIKHACHHANG      INTEGER               not null,
   HOTEN                NVARCHAR2(50)         not null,
   NGAYSINH             DATE                  not null,
   CMND                 NUMBER(20)            not null,
   GIOITINH             NVARCHAR2(5)          not null,
   DIACHI               NVARCHAR2(50)         not null,
   EMAIL                VARCHAR2(50),
   SDT                  CHAR(20)              not null,
   TRANGTHAI            NVARCHAR2(50)         not null,
   constraint PK_KHACHHANG primary key (MAKHACHHANG)
);

/*==============================================================*/
/* Index: THUOC__FK                                             */
/*==============================================================*/
create index THUOC__FK on KHACHHANG (
   MALOAIKHACHHANG ASC
);

/*==============================================================*/
/* Table: LOAIKHACHHANG                                         */
/*==============================================================*/
create table LOAIKHACHHANG (
   MALOAIKHACHHANG      INTEGER               not null,
   TENLOAIKHACHHANG     NVARCHAR2(10)         not null,
   constraint PK_LOAIKHACHHANG primary key (MALOAIKHACHHANG)
);

/*==============================================================*/
/* Table: LOAIPHONG                                             */
/*==============================================================*/
create table LOAIPHONG (
   MALOAIPHONG          INTEGER               not null,
   TENLOAIPHONG         NVARCHAR2(50)         not null,
   GIAPHONG             NUMBER(15)            not null,
   constraint PK_LOAIPHONG primary key (MALOAIPHONG)
);

/*==============================================================*/
/* Table: LOAITAIKHOAN                                          */
/*==============================================================*/
create table LOAITAIKHOAN (
   MALOAITAIKHOAN       INTEGER               not null,
   TENLOAITAIKHOAN      NVARCHAR2(50)         not null,
   MOTA                 NVARCHAR2(200),
   constraint PK_LOAITAIKHOAN primary key (MALOAITAIKHOAN)
);

/*==============================================================*/
/* Table: NHANVIEN                                              */
/*==============================================================*/
create table NHANVIEN (
   MANHANVIEN           INTEGER               not null,
   HOTEN                NVARCHAR2(50)         not null,
   NGAYSINH             DATE                  not null,
   NGAYVAOLAM           DATE                  not null,
   CMND                 NUMBER(20)            not null,
   SODT                 VARCHAR2(20)          not null,
   MANGUOIQUANLY        INTEGER,
   GIOITINH             NVARCHAR2(5)          not null,
   EMAIL                VARCHAR2(50),
   DIACHI               NVARCHAR2(50)         not null,
   TRANGTHAI            NVARCHAR2(50)         not null,
   constraint PK_NHANVIEN primary key (MANHANVIEN)
);

/*==============================================================*/
/* Table: PHIEUDATPHONG                                         */
/*==============================================================*/
create table PHIEUDATPHONG (
   MAPHIEU              INTEGER               not null,
   MANHANVIEN           INTEGER               not null,
   MAKHACHHANG          INTEGER               not null,
   MAPHONG              INTEGER               not null,
   NGAYDAT              DATE                  not null,
   NGAYDEN              DATE                  not null,
   NGAYDI               DATE                  not null,
   constraint PK_PHIEUDATPHONG primary key (MAPHIEU)
);

/*==============================================================*/
/* Index: PHONG_PHIEUDATPHONG_FK                                */
/*==============================================================*/
create index PHONG_PHIEUDATPHONG_FK on PHIEUDATPHONG (
   MAPHONG ASC
);

/*==============================================================*/
/* Index: DAT_TRUOC_FK                                          */
/*==============================================================*/
create index DAT_TRUOC_FK on PHIEUDATPHONG (
   MAKHACHHANG ASC
);

/*==============================================================*/
/* Index: DAT_FK                                                */
/*==============================================================*/
create index DAT_FK on PHIEUDATPHONG (
   MANHANVIEN ASC
);

/*==============================================================*/
/* Table: PHONG                                                 */
/*==============================================================*/
create table PHONG (
   MAPHONG              INTEGER               not null,
   MALOAIPHONG          INTEGER               not null,
   TRANGTHAI            NVARCHAR2(50)         not null,
   constraint PK_PHONG primary key (MAPHONG)
);

/*==============================================================*/
/* Index: THUOCC_FK                                             */
/*==============================================================*/
create index THUOCC_FK on PHONG (
   MALOAIPHONG ASC
);

/*==============================================================*/
/* Table: TAIKHOAN                                              */
/*==============================================================*/
create table TAIKHOAN (
   MATAIKHOAN           INTEGER               not null,
   MANHANVIEN           INTEGER               not null,
   MALOAITAIKHOAN       INTEGER               not null,
   TENTAIKHOAN          VARCHAR2(50)          not null,
   MATKHAU              VARCHAR2(50)          not null,
   constraint PK_TAIKHOAN primary key (MATAIKHOAN)
);

/*==============================================================*/
/* Index: CO_FK                                                 */
/*==============================================================*/
create index CO_FK on TAIKHOAN (
   MANHANVIEN ASC
);

/*==============================================================*/
/* Index: THUOC_FK                                              */
/*==============================================================*/
create index THUOC_FK on TAIKHOAN (
   MALOAITAIKHOAN ASC
);

alter table CHITIETHOADON
   add constraint FK_CHITIETH_CHITIETHO_DICHVU foreign key (MADICHVU)
      references DICHVU (MADICHVU);

alter table CHITIETHOADON
   add constraint FK_CHITIETH_CHITIETHO_HOADON foreign key (MAHOADON)
      references HOADON (MAHOADON);

alter table HOADON
   add constraint FK_HOADON_HOADON_PH_PHONG foreign key (MAPHONG)
      references PHONG (MAPHONG);

alter table HOADON
   add constraint FK_HOADON_LAP_NHANVIEN foreign key (MANHANVIEN)
      references NHANVIEN (MANHANVIEN);

alter table HOADON
   add constraint FK_HOADON_NHAN_KHACHHAN foreign key (MAKHACHHANG)
      references KHACHHANG (MAKHACHHANG);

alter table KHACHHANG
   add constraint FK_KHACHHAN_THUOC__LOAIKHAC foreign key (MALOAIKHACHHANG)
      references LOAIKHACHHANG (MALOAIKHACHHANG);

alter table PHIEUDATPHONG
   add constraint FK_PHIEUDAT_DAT_NHANVIEN foreign key (MANHANVIEN)
      references NHANVIEN (MANHANVIEN);

alter table PHIEUDATPHONG
   add constraint FK_PHIEUDAT_DAT_TRUOC_KHACHHAN foreign key (MAKHACHHANG)
      references KHACHHANG (MAKHACHHANG);

alter table PHIEUDATPHONG
   add constraint FK_PHIEUDAT_PHONG_PHI_PHONG foreign key (MAPHONG)
      references PHONG (MAPHONG);

alter table PHONG
   add constraint FK_PHONG_THUOCC_LOAIPHON foreign key (MALOAIPHONG)
      references LOAIPHONG (MALOAIPHONG);

alter table TAIKHOAN
   add constraint FK_TAIKHOAN_CO_NHANVIEN foreign key (MANHANVIEN)
      references NHANVIEN (MANHANVIEN);

alter table TAIKHOAN
   add constraint FK_TAIKHOAN_THUOC_LOAITAIK foreign key (MALOAITAIKHOAN)
      references LOAITAIKHOAN (MALOAITAIKHOAN);

--procedure

-- Them dich vu - hoa don

CREATE OR REPLACE PROCEDURE PRO_THEMDICHVU_HOADON(
  MAHOADON1 HOADON.MAHOADON%TYPE,
  MADICHVU1 DICHVU.MADICHVU%TYPE,
  SOLUONG1 CHITIETHOADON.SOLUONG%TYPE)
AS
  COUNTT INT;
  SOLUONG2 CHITIETHOADON.SOLUONG%TYPE;
BEGIN
  SELECT COUNT(*) INTO COUNTT FROM CHITIETHOADON WHERE MAHOADON=MAHOADON1 AND MADICHVU=MADICHVU1;
  IF(COUNTT>0) THEN
  SELECT SOLUONG INTO SOLUONG2 FROM CHITIETHOADON WHERE MAHOADON=MAHOADON1 AND MADICHVU=MADICHVU1;
  UPDATE CHITIETHOADON SET SOLUONG=SOLUONG2+SOLUONG1;
  END IF;
  IF(COUNTT=0) THEN
  INSERT INTO CHITIETHOADON(MAHOADON,MADICHVU,SOLUONG) VALUES(MAHOADON1,MADICHVU1,SOLUONG1);
  END IF;
  EXCEPTION
  WHEN OTHERS THEN
  ROLLBACK;
  RAISE;
  COMMIT;
END;




-- bat loi

CREATE OR REPLACE PROCEDURE PRO_BATLOI( 
IN_TENLOI NVARCHAR2) 
IS 
PRAGMA AUTONOMOUS_TRANSACTION; 
BEGIN 
INSERT INTO LOG(TENLOI,NGAYLOI) VALUES(IN_TENLOI,SYSDATE); 
COMMIT; 
END; 



-- Xuat thong bao loi

CREATE OR REPLACE PROCEDURE PRO_XUATTHONGBAOLOI 
(CONTRO OUT SYS_REFCURSOR) 
IS 
BEGIN 
OPEN CONTRO FOR 
SELECT TENLOI FROM LOG WHERE MALOI >= ALL(SELECT MALOI FROM LOG); 
END;

-- danh sach tai khoan

CREATE OR REPLACE PROCEDURE PRO_DANHSACHTAIKHOAN(CONTRO OUT SYS_REFCURSOR) 
IS 
BEGIN 
OPEN CONTRO FOR 
SELECT * FROM TAIKHOAN; 
END; 


--danh sach khach hang


CREATE OR REPLACE PROCEDURE PRO_DANHSACHKHACHHANG( 
CONTRO OUT SYS_REFCURSOR 
)
IS 
BEGIN 
OPEN CONTRO FOR 
SELECT MAKHACHHANG,HOTEN,NGAYSINH,CMND,GIOITINH,DIACHI,EMAIL,SDT,TRANGTHAI,TENLOAIKHACHHANG FROM KHACHHANG INNER JOIN LOAIKHACHHANG  
                    ON KHACHHANG.MALOAIKHACHHANG=LOAIKHACHHANG.MALOAIKHACHHANG; 
END; 


-- tim kiem thong tin khach hang



CREATE OR REPLACE PROCEDURE PRO_DANHSACHTIMKIEMKHACHHANG 
( 
IN_TUKHOA NVARCHAR2, 
CONTRO OUT SYS_REFCURSOR 
) 
IS 
BEGIN 
    OPEN CONTRO FOR 
    SELECT MAKHACHHANG,HOTEN,NGAYSINH,CMND,GIOITINH,DIACHI,EMAIL,SDT,TRANGTHAI,TENLOAIKHACHHANG  
    FROM KHACHHANG INNER JOIN LOAIKHACHHANG ON KHACHHANG.MALOAIKHACHHANG=LOAIKHACHHANG.MALOAIKHACHHANG 
        WHERE MAKHACHHANG LIKE ('%'||(IN_TUKHOA)||'%') OR 
            HOTEN LIKE ('%'||(IN_TUKHOA)||'%') OR 
            NGAYSINH LIKE ('%'||(IN_TUKHOA)||'%') OR  
            CMND LIKE ('%'||(IN_TUKHOA)||'%') OR 
            GIOITINH LIKE ('%'||(IN_TUKHOA)||'%') OR 
            DIACHI LIKE ('%'||(IN_TUKHOA)||'%') OR 
            EMAIL LIKE ('%'||(IN_TUKHOA)||'%') OR 
            SDT LIKE ('%'||(IN_TUKHOA)||'%') OR 
          TRANGTHAI LIKE ('%'||(IN_TUKHOA)||'%') 
            OR TENLOAIKHACHHANG LIKE  ('%'||(IN_TUKHOA)||'%') ; 
END; 


-- cap nhat thong tin khach hang


CREATE OR REPLACE PROCEDURE PRO_CAPNHATKHACHHANG( 
IN_MAKHACHHANG KHACHHANG.MAKHACHHANG%TYPE, 
IN_HOTEN KHACHHANG.HOTEN%TYPE, 
IN_NGAYSINH KHACHHANG.NGAYSINH%TYPE, 
IN_CMND KHACHHANG.CMND%TYPE, 
IN_GIOITINH KHACHHANG.GIOITINH%TYPE, 
IN_DIACHI KHACHHANG.DIACHI%TYPE, 
IN_EMAIL KHACHHANG.EMAIL%TYPE, 
IN_SDT KHACHHANG.SDT%TYPE 
) 
IS 
BEGIN 
UPDATE KHACHHANG 
SET HOTEN=IN_HOTEN, 
NGAYSINH=IN_NGAYSINH,  
CMND=IN_CMND, 
GIOITINH=IN_GIOITINH,  
DIACHI=IN_DIACHI,  
EMAIL=IN_EMAIL,  
SDT=IN_SDT 
WHERE MAKHACHHANG=IN_MAKHACHHANG; 
  EXCEPTION
  WHEN OTHERS THEN
  ROLLBACK;
  RAISE;
  COMMIT;
END; 

-- danh sach nhan vien

CREATE OR REPLACE PROCEDURE PRO_DANHSACHNHANVIEN( 
  CONTRO OUT SYS_REFCURSOR) 
IS 
BEGIN 
  OPEN CONTRO FOR  
  SELECT A.MANHANVIEN,A.HOTEN,A.NGAYSINH,A.NGAYVAOLAM,A.CMND,A.SODT,B.HOTEN,A.GIOITINH,A.EMAIL,A.DIACHI,A.TRANGTHAI  
  FROM NHANVIEN A LEFT JOIN NHANVIEN B  
  ON A.MANGUOIQUANLY=B.MANHANVIEN; 
END; 



--THEM NHAN VIEN

CREATE OR REPLACE PROCEDURE PRO_THEMNHANVIEN( 
  IN_HOTEN NHANVIEN.HOTEN%TYPE, 
  IN_NGAYSINH NHANVIEN.NGAYSINH%TYPE, 
  IN_NGAYVAOLAM NHANVIEN.NGAYVAOLAM%TYPE, 
  IN_CMND NHANVIEN.CMND%TYPE, 
  IN_SDT NHANVIEN.SODT%TYPE, 
  IN_GIOITINH NHANVIEN.GIOITINH%TYPE, 
  IN_EMAIL NHANVIEN.EMAIL%TYPE, 
  IN_DIACHI NHANVIEN.DIACHI%TYPE, 
  IN_TRANGTHAI NHANVIEN.TRANGTHAI%TYPE, 
  IN_MANGUOIQUANLY NHANVIEN.MANGUOIQUANLY%TYPE 
  ) 
IS 
BEGIN 
  INSERT INTO NHANVIEN(HOTEN,NGAYSINH,NGAYVAOLAM,CMND,SODT,GIOITINH,EMAIL,TRANGTHAI,DIACHI,MANGUOIQUANLY) VALUES(IN_HOTEN,IN_NGAYSINH,IN_NGAYVAOLAM,IN_CMND,IN_SDT,IN_GIOITINH,IN_EMAIL,IN_TRANGTHAI,IN_DIACHI,IN_MANGUOIQUANLY); 
  EXCEPTION
  WHEN OTHERS THEN
  ROLLBACK;
  RAISE;
  COMMIT;
END;


-- CAP NHAT NHAN VIEN


CREATE OR REPLACE PROCEDURE PRO_CAPNHATNHANVIEN( 
  IN_HOTEN NHANVIEN.HOTEN%TYPE, 
  IN_NGAYSINH NHANVIEN.NGAYSINH%TYPE, 
  IN_NGAYVAOLAM NHANVIEN.NGAYVAOLAM%TYPE, 
  IN_CMND NHANVIEN.CMND%TYPE, 
  IN_SDT NHANVIEN.SODT%TYPE, 
  IN_MANGUOIQUANLY NHANVIEN.MANGUOIQUANLY%TYPE, 
  IN_GIOITINH NHANVIEN.GIOITINH%TYPE, 
  IN_EMAIL NHANVIEN.EMAIL%TYPE, 
  IN_DIACHI NHANVIEN.DIACHI%TYPE, 
  IN_TRANGTHAI NHANVIEN.TRANGTHAI%TYPE, 
  IN_MANHANVIEN NHANVIEN.MANHANVIEN%TYPE 
  ) 
IS 
BEGIN 
  UPDATE NHANVIEN SET HOTEN=IN_HOTEN, 
                      NGAYSINH=IN_NGAYSINH, 
                      NGAYVAOLAM=IN_NGAYVAOLAM,  
                      CMND=IN_CMND, 
                      MANGUOIQUANLY=IN_MANGUOIQUANLY, 
                      GIOITINH=IN_GIOITINH, 
                      EMAIL=IN_EMAIL, 
                      DIACHI=IN_DIACHI, 
                      TRANGTHAI=IN_TRANGTHAI, 
                      SODT=IN_SDT 
                      WHERE MANHANVIEN=IN_MANHANVIEN; 
  EXCEPTION
  WHEN OTHERS THEN
  ROLLBACK;
  RAISE;
  COMMIT;
END; 



--XOA NHAN VIEN

CREATE OR REPLACE PROCEDURE PRO_XOANHANVIEN( 
  MANHANVIEN1 NHANVIEN.MANHANVIEN%TYPE) 
IS 
  CURSOR CONTRO1 IS SELECT MANHANVIEN FROM HOADON WHERE MANHANVIEN=MANHANVIEN1; 
  CURSOR CONTRO2 IS SELECT MANHANVIEN FROM PHIEUDATPHONG WHERE MANHANVIEN=MANHANVIEN1; 
  CURSOR CONTRO3 IS SELECT MANHANVIEN FROM TAIKHOAN WHERE MANHANVIEN=MANHANVIEN1; 
  MANHANVIEN2 NHANVIEN.MANHANVIEN%TYPE; 
BEGIN 
  OPEN CONTRO1; 
  LOOP 
  FETCH CONTRO1 INTO MANHANVIEN2; 
  EXIT WHEN CONTRO1%NOTFOUND; 
  UPDATE HOADON SET MANHANVIEN=NULL WHERE MANHANVIEN=MANHANVIEN2; 
  END LOOP; 
  CLOSE CONTRO1; 
  OPEN CONTRO2; 
  LOOP 
  FETCH CONTRO2 INTO MANHANVIEN2; 
  EXIT WHEN CONTRO2%NOTFOUND; 
  UPDATE HOADON SET MANHANVIEN=NULL WHERE MANHANVIEN=MANHANVIEN2; 
  END LOOP; 
  CLOSE CONTRO2; 
  OPEN CONTRO3; 
  LOOP 
  FETCH CONTRO3 INTO MANHANVIEN2; 
  EXIT WHEN CONTRO3%NOTFOUND; 
  UPDATE HOADON SET MANHANVIEN=NULL WHERE MANHANVIEN=MANHANVIEN2; 
  END LOOP; 
  CLOSE CONTRO3; 
  DELETE FROM NHANVIEN WHERE MANHANVIEN=MANHANVIEN1; 
    EXCEPTION
  WHEN OTHERS THEN
  ROLLBACK;
  RAISE;
  COMMIT;
END;


-- DANH SACH TIM KIEM NHAN VIEN


CREATE OR REPLACE PROCEDURE PRO_DANHSACHTIMKIEMNHANVIEN 
( 
IN_TUKHOA NVARCHAR2, 
CONTRO OUT SYS_REFCURSOR 
) 
IS 
BEGIN 
    OPEN CONTRO FOR 
    SELECT * FROM NHANVIEN 
        WHERE CMND LIKE ('%'||(IN_TUKHOA)||'%') OR 
        SODT LIKE ('%'||(IN_TUKHOA)||'%') OR 
        DIACHI LIKE ('%'||(IN_TUKHOA)||'%') OR 
        EMAIL LIKE ('%'||(IN_TUKHOA)||'%') OR  
        TRANGTHAI LIKE ('%'||(IN_TUKHOA)||'%') OR  
        GIOITINH LIKE ('%'||(IN_TUKHOA)||'%') OR  
        HOTEN LIKE ('%'||(IN_TUKHOA)||'%'); 
END; 


-- DANH SACH PHONG


CREATE OR REPLACE PROCEDURE PRO_THONGTINCACPHONG( 
  CONTRO OUT SYS_REFCURSOR) 
AS 
BEGIN 
  OPEN CONTRO FOR 
  SELECT PHONG.MAPHONG,LOAIPHONG.MALOAIPHONG,TENLOAIPHONG,PHONG.TRANGTHAI,LOAIPHONG.GIAPHONG,KHACHHANG.HOTEN AS TEN_KH, KHACHHANG.CMND AS CMND_KH,HOADON.NGAYDEN, HOADON.NGAYDI,NHANVIEN.HOTEN AS TEN_NV,NHANVIEN.CMND AS CMND_NV, 

  HOADON.MAHOADON 
FROM ((((((PHONG LEFT JOIN LOAIPHONG ON PHONG.MALOAIPHONG=LOAIPHONG.MALOAIPHONG)LEFT JOIN HOADON ON PHONG.MAPHONG=HOADON.MAPHONG) LEFT JOIN KHACHHANG ON HOADON.MAKHACHHANG=KHACHHANG.MAKHACHHANG)  
LEFT JOIN NHANVIEN ON HOADON.MANHANVIEN=NHANVIEN.MANHANVIEN))) 
ORDER BY PHONG.MAPHONG; 
END; 


-- DANH SACH LOAI PHONG

CREATE OR REPLACE PROCEDURE PRO_DANHSACHLOAIPHONG( 
CONTRO OUT SYS_REFCURSOR) 
AS 
BEGIN 
OPEN CONTRO FOR 
SELECT * FROM LOAIPHONG; 
END;  



-- TIM KIEM PHONG


CREATE OR REPLACE PROCEDURE PRO_TIMKIEMTHONGTINLUUTRU( 
IN_TUKHOA NVARCHAR2, 
CONTRO OUT SYS_REFCURSOR) 
AS 
BEGIN 
OPEN CONTRO FOR 
--FINDING IN HOADON 
SELECT PHONG.MAPHONG 
FROM ((((PHONG LEFT JOIN LOAIPHONG ON PHONG.MALOAIPHONG=LOAIPHONG.MALOAIPHONG)LEFT JOIN HOADON ON PHONG.MAPHONG=HOADON.MAPHONG) LEFT JOIN KHACHHANG ON HOADON.MAKHACHHANG=KHACHHANG.MAKHACHHANG)  
LEFT JOIN NHANVIEN ON HOADON.MANHANVIEN=NHANVIEN.MANHANVIEN) 
WHERE PHONG.MAPHONG LIKE ('%'||(IN_TUKHOA)||'%') OR 
LOAIPHONG.MALOAIPHONG LIKE ('%'||(IN_TUKHOA)||'%') OR 
LOAIPHONG.TENLOAIPHONG LIKE ('%'||(IN_TUKHOA)||'%') OR 
PHONG.TRANGTHAI LIKE ('%'||(IN_TUKHOA)||'%') OR 
LOAIPHONG.GIAPHONG LIKE ('%'||(IN_TUKHOA)||'%') OR 
KHACHHANG.HOTEN LIKE ('%'||(IN_TUKHOA)||'%') OR 
KHACHHANG.CMND LIKE ('%'||(IN_TUKHOA)||'%') OR 
HOADON.NGAYDEN LIKE ('%'||(IN_TUKHOA)||'%') OR 
HOADON.NGAYDI LIKE ('%'||(IN_TUKHOA)||'%') OR 
NHANVIEN.HOTEN LIKE ('%'||(IN_TUKHOA)||'%') OR 
NHANVIEN.CMND LIKE ('%'||(IN_TUKHOA)||'%') OR 
HOADON.TRANGTHAI LIKE ('%'||(IN_TUKHOA)||'%') 
UNION 
--FINDING IN PHIEUDATPHONG 
SELECT MAPHONG 
FROM ((PHIEUDATPHONG P LEFT JOIN KHACHHANG K ON P.MAKHACHHANG=K.MAKHACHHANG) 
LEFT JOIN NHANVIEN N ON P.MANHANVIEN=N.MANHANVIEN) 
WHERE P.MAPHIEU LIKE ('%'||(IN_TUKHOA)||'%') OR 
K.HOTEN LIKE ('%'||(IN_TUKHOA)||'%') OR 
K.CMND LIKE ('%'||(IN_TUKHOA)||'%') OR 
P.NGAYDAT LIKE ('%'||(IN_TUKHOA)||'%') OR 
P.NGAYDEN LIKE ('%'||(IN_TUKHOA)||'%') OR 
P.NGAYDI LIKE ('%'||(IN_TUKHOA)||'%') OR 
N.HOTEN LIKE ('%'||(IN_TUKHOA)||'%') OR 
N.CMND LIKE ('%'||(IN_TUKHOA)||'%')  
ORDER BY MAPHONG; 
END;


--Procedure xem danh sach dat phong cua 1 phong cu the--checked 

--CREATE OR REPLACE PROCEDURE PRO_THONGTINDATPHONG( 
--IN_MAPHONG phong.maphong%TYPE, CONTRO OUT SYS_REFCURSOR) 
--IS
--BEGIN 
--OPEN CONTRO FOR 
--SELECT PHIEUDATPHONG.MAPHIEU,PHIEUDATPHONG.MAKHACHHANG,KHACHHANG.HOTEN AS TENKHACHHANG,PHIEUDATPHONG.MANHANVIEN, NHANVIEN.HOTEN AS TENNHANVIEN, NGAYDAT ,NGAYDEN, NGAYDI 
--FROM (PHIEUDATPHONG INNER JOIN KHACHHANG ON PHIEUDATPHONG.MAKHACHHANG=KHACHHANG.MAKHACHHANG) 
--INNER JOIN NHANVIEN ON PHIEUDATPHONG.MANHANVIEN=NHANVIEN.MANHANVIEN 
--WHERE IN_MAPHONG=PHIEUDATPHONG.MAPHONG; 
--END; 



--hienthithongtindichvucua mot phong cu the 

CREATE OR REPLACE PROCEDURE Pro_ThongTinDichVu( 
in_maphong phong.maphong%TYPE,CONTRO OUT SYS_REFCURSOR) 
IS 
BEGIN 
OPEN CONTRO FOR 
SELECT TENDICHVU, SOLUONG, THANHTIEN 
FROM ((CHITIETHOADON INNER JOIN DICHVU ON CHITIETHOADON.MADICHVU=DICHVU.MADICHVU) 
INNER JOIN HOADON ON CHITIETHOADON.MAHOADON=HOADON.MAHOADON)  
WHERE in_maphong=maphong; 
END; 



CREATE OR REPLACE PROCEDURE PRO_DANHSACHDICHVUCOTHEDATDUOC( 
CONTRO OUT SYS_REFCURSOR) 
AS 
BEGIN 
OPEN CONTRO FOR 
SELECT MADICHVU,TENDICHVU,GIATIEN 
FROM DICHVU 
WHERE TRANGTHAI='Có'; 
END; 



CREATE OR REPLACE PROCEDURE PRO_HIENTHIDSPHONGCOTHETHUE( 
  IN_NGAYDI HOADON.NGAYDI%TYPE, 
  IN_MALOAIPHONG LOAIPHONG.MALOAIPHONG%TYPE, 
  CONTRO OUT SYS_REFCURSOR) 
IS 
BEGIN 
  OPEN CONTRO FOR 
  SELECT MAPHONG FROM PHONG WHERE TRANGTHAI='Trống' AND MALOAIPHONG=IN_MALOAIPHONG AND MAPHONG NOT IN(SELECT MAPHONG 
                                                                      FROM PHIEUDATPHONG) 
  UNION 
  SELECT P.MAPHONG FROM PHONG P JOIN PHIEUDATPHONG PDP ON P.MAPHONG=PDP.MAPHONG 
  WHERE TRANGTHAI='Trống' AND P.MALOAIPHONG=IN_MALOAIPHONG AND IN_NGAYDI<ALL(SELECT NGAYDEN 
                                                                      FROM PHIEUDATPHONG PDP1 
                                                                      WHERE P.MAPHONG=PDP1.MAPHONG) 
    ORDER BY MAPHONG;
END;




CREATE OR REPLACE PROCEDURE PRO_LUUTHONGTINTHUEPHONG( 
IN_HOTEN KHACHHANG.HOTEN%TYPE, 
IN_NGAYSINH KHACHHANG.NGAYSINH%TYPE, 
IN_CMND KHACHHANG.CMND%TYPE, 
IN_GIOITINH KHACHHANG.GIOITINH%TYPE, 
IN_DIACHI KHACHHANG.DIACHI%TYPE, 
IN_EMAIL KHACHHANG.EMAIL%TYPE, 
IN_SDT KHACHHANG.SDT%TYPE, 
IN_MAPHONG PHONG.MAPHONG%TYPE, 
IN_MANHANVIEN NHANVIEN.MANHANVIEN%TYPE, 
IN_NGAYDI HOADON.NGAYDI%TYPE) 
AS 
  COUNT_KH INT; 
  VAR_MAKH KHACHHANG.MAKHACHHANG%TYPE; 
BEGIN 
  SELECT COUNT(*) INTO COUNT_KH FROM KHACHHANG WHERE CMND=IN_CMND; 
  IF(COUNT_KH=0) THEN 
  INSERT INTO KHACHHANG(HOTEN,NGAYSINH,CMND,GIOITINH,TRANGTHAI,DIACHI,EMAIL,SDT,MALOAIKHACHHANG)  
  VALUES(IN_HOTEN,IN_NGAYSINH,IN_CMND,IN_GIOITINH,'Đang thuê',IN_DIACHI,IN_EMAIL,IN_SDT,1); 
  SELECT MAKHACHHANG INTO VAR_MAKH FROM KHACHHANG WHERE CMND=IN_CMND; 
  INSERT INTO HOADON(MAKHACHHANG,MAPHONG,MANHANVIEN,NGAYDEN,NGAYDI,TRANGTHAI)  
  VALUES (VAR_MAKH,IN_MAPHONG,IN_MANHANVIEN,SYSDATE,IN_NGAYDI,'Chưa thanh toán'); 
  END IF; 
  IF(COUNT_KH>0) THEN 
  UPDATE KHACHHANG SET TRANGTHAI='Đang thuê' WHERE CMND=IN_CMND; 
  SELECT MAKHACHHANG INTO VAR_MAKH FROM KHACHHANG WHERE CMND=IN_CMND;
  INSERT INTO HOADON(MAKHACHHANG,MAPHONG,MANHANVIEN,NGAYDEN,NGAYDI,TRANGTHAI)  
  VALUES (VAR_MAKH,IN_MAPHONG,IN_MANHANVIEN,SYSDATE,IN_NGAYDI,'Chưa thanh toán'); 
  END IF; 
  UPDATE PHONG SET TRANGTHAI='Đang thuê' WHERE MAPHONG=IN_MAPHONG; 
  EXCEPTION
  WHEN OTHERS THEN
  ROLLBACK;
  RAISE;
  COMMIT;
END; 




CREATE OR REPLACE PROCEDURE PRO_HIENTHIDSPHONGCOTHEDAT( 
    IN_NGAYDEN HOADON.NGAYDEN%TYPE, 
    IN_NGAYDI HOADON.NGAYDI%TYPE, 
    IN_MALOAIPHONG LOAIPHONG.MALOAIPHONG%TYPE, 
    CONTRO OUT SYS_REFCURSOR 
    ) 
  IS 
  BEGIN 
    OPEN CONTRO FOR 
    SELECT MAPHONG 
    FROM PHONG  
    WHERE TRANGTHAI='Trống' AND MALOAIPHONG=IN_MALOAIPHONG AND MAPHONG NOT IN(SELECT MAPHONG 
                                                                        FROM PHIEUDATPHONG) 
    UNION     
    SELECT P.MAPHONG 
    FROM PHONG P JOIN HOADON H ON P.MAPHONG=H.MAPHONG 
    WHERE H.TRANGTHAI='Đang thuê' AND P.MALOAIPHONG=IN_MALOAIPHONG AND IN_NGAYDEN>(SELECT NGAYDI 
                                                                        FROM HOADON HD 
                                                                        WHERE HD.MAPHONG=P.MAPHONG) 
    UNION 
    SELECT P.MAPHONG 
    FROM PHONG P JOIN PHIEUDATPHONG PDP ON P.MAPHONG=PDP.MAPHONG 
    WHERE TRANGTHAI='Trống' AND P.MALOAIPHONG=IN_MALOAIPHONG AND(IN_NGAYDI<ALL(SELECT NGAYDEN  
                                                                      FROM PHIEUDATPHONG PDP1  
                                                                      WHERE PDP1.MAPHONG=P.MAPHONG) OR (IN_NGAYDEN>ALL(SELECT NGAYDI  
                                                                                                                    FROM PHIEUDATPHONG PDP2    
                                                                                                                    WHERE PDP2.MAPHONG=P.MAPHONG))) 

    ORDER BY MAPHONG; 

  END; 




create or replace PROCEDURE PRO_LUUTHONGTINDATPHONG( 
  IN_HOTEN KHACHHANG.HOTEN%TYPE, 
IN_NGAYSINH KHACHHANG.NGAYSINH%TYPE, 
IN_CMND KHACHHANG.CMND%TYPE, 
IN_GIOITINH KHACHHANG.GIOITINH%TYPE, 
IN_DIACHI KHACHHANG.DIACHI%TYPE, 
IN_EMAIL KHACHHANG.EMAIL%TYPE, 
IN_SDT KHACHHANG.SDT%TYPE, 
  IN_MAPHONG PHONG.MAPHONG%TYPE, 
  IN_MANHANVIEN NHANVIEN.MANHANVIEN%TYPE, 
  IN_NGAYDEN PHIEUDATPHONG.NGAYDEN%TYPE, 
  IN_NGAYDI PHIEUDATPHONG.NGAYDI%TYPE) 
AS 
  COUNT_KH INT; 
  VAR_MAKH KHACHHANG.MAKHACHHANG%TYPE; 
BEGIN 
    SELECT COUNT(*) INTO COUNT_KH FROM KHACHHANG WHERE CMND=IN_CMND; 
    IF(COUNT_KH=0) THEN 
    INSERT INTO KHACHHANG(HOTEN,NGAYSINH,CMND,GIOITINH,DIACHI,EMAIL,SDT,TRANGTHAI,MALOAIKHACHHANG)  
  VALUES(IN_HOTEN,IN_NGAYSINH,IN_CMND,IN_GIOITINH,IN_DIACHI,IN_EMAIL,IN_SDT,'Đang đặt trước',1); 
      SELECT MAKHACHHANG INTO VAR_MAKH FROM KHACHHANG WHERE CMND=IN_CMND; 
      INSERT INTO PHIEUDATPHONG(MAKHACHHANG,MANHANVIEN,MAPHONG,NGAYDAT,NGAYDEN,NGAYDI)  
      VALUES(VAR_MAKH,IN_MANHANVIEN,IN_MAPHONG,SYSDATE,IN_NGAYDEN,IN_NGAYDI); 
    END IF; 
    IF(COUNT_KH>0) THEN 
    UPDATE KHACHHANG SET TRANGTHAI='Đang đặt trước' WHERE CMND=IN_CMND; 
    SELECT MAKHACHHANG INTO VAR_MAKH FROM KHACHHANG WHERE CMND=IN_CMND; 
     INSERT INTO PHIEUDATPHONG(MAKHACHHANG,MANHANVIEN,MAPHONG,NGAYDAT,NGAYDEN,NGAYDI)  
      VALUES(VAR_MAKH,IN_MANHANVIEN,IN_MAPHONG,SYSDATE,IN_NGAYDEN,IN_NGAYDI); 
      END IF; 
      
  COMMIT;
END;



CREATE OR REPLACE PROCEDURE PRO_HIENTHITTPHIEUDATPHONG(CONTRO OUT SYS_REFCURSOR) 
IS 
BEGIN 
OPEN CONTRO FOR 
SELECT MAPHIEU,PHIEUDATPHONG.MAKHACHHANG,KHACHHANG.HOTEN,PHIEUDATPHONG.MANHANVIEN,NHANVIEN.HOTEN,MAPHONG,NGAYDAT,NGAYDEN,NGAYDI 
FROM ((PHIEUDATPHONG INNER JOIN KHACHHANG ON PHIEUDATPHONG.MAKHACHHANG=KHACHHANG.MAKHACHHANG) 
INNER JOIN NHANVIEN ON PHIEUDATPHONG.MANHANVIEN=NHANVIEN.MANHANVIEN); 
END; 




CREATE OR REPLACE PROCEDURE PRO_TIMKIEMPHIEUDATPHONG( 
IN_TUKHOA NVARCHAR2, 
CONTRO OUT SYS_REFCURSOR 
) 
IS 
BEGIN 
OPEN CONTRO FOR 
SELECT MAPHIEU,PHIEUDATPHONG.MAKHACHHANG, 
A.HOTEN,PHIEUDATPHONG.MANHANVIEN,B.HOTEN, 
MAPHONG,NGAYDAT,NGAYDEN,NGAYDI 
FROM ((PHIEUDATPHONG INNER JOIN KHACHHANG  A  
ON PHIEUDATPHONG.MAKHACHHANG=A.MAKHACHHANG) 
INNER JOIN NHANVIEN B ON PHIEUDATPHONG.MANHANVIEN=B.MANHANVIEN) 
WHERE MAPHIEU LIKE ('%'||IN_TUKHOA||'%') 
OR A.HOTEN LIKE ('%'||IN_TUKHOA||'%') 
OR B.HOTEN LIKE ('%'||IN_TUKHOA||'%') 
OR MAPHONG LIKE ('%'||IN_TUKHOA||'%'); 
END; 




CREATE OR REPLACE PROCEDURE PRO_HUYPHIEUDATPHONG( 
IN_MAPHIEU PHIEUDATPHONG.MAPHIEU%TYPE) 
IS 
BEGIN 
DELETE FROM PHIEUDATPHONG 
WHERE MAPHIEU=IN_MAPHIEU; 
  
  COMMIT;
END; 





CREATE OR REPLACE PROCEDURE PRO_NHANPHONGDADATTRUOC( 
IN_MAPHONG HOADON.MAPHONG%TYPE, 
IN_MAKHACHHANG HOADON.MAKHACHHANG%TYPE, 
IN_MANHANVIEN HOADON.MANHANVIEN%TYPE, 
IN_NGAYDEN HOADON.NGAYDEN%TYPE, 
IN_NGAYDI HOADON.NGAYDI%TYPE 
) 
IS 
BEGIN 
INSERT INTO HOADON(MAPHONG,MAKHACHHANG,MANHANVIEN,NGAYDEN,NGAYDI,TRANGTHAI) 
VALUES(IN_MAPHONG,IN_MAKHACHHANG, IN_MANHANVIEN,SYSDATE,IN_NGAYDI,'Chưa thanh toán');
UPDATE PHONG 
SET TRANGTHAI='Đang thuê' 
WHERE IN_MAPHONG=MAPHONG; 
DELETE FROM PHIEUDATPHONG 
WHERE MANHANVIEN=IN_MANHANVIEN AND MAKHACHHANG=IN_MAKHACHHANG 
AND MAPHONG=IN_MAPHONG AND NGAYDEN=IN_NGAYDEN AND NGAYDI=IN_NGAYDI; 
UPDATE KHACHHANG 
SET TRANGTHAI='Đang thuê' 
WHERE MAKHACHHANG=IN_MAKHACHHANG; 
  
  COMMIT;
END;




--quan ly dich vu


CREATE OR REPLACE PROCEDURE PRO_HIENTHIDSDICHVU( 
  CONTRO OUT SYS_REFCURSOR) 
IS 
BEGIN 
  OPEN CONTRO FOR 
  SELECT MADICHVU,TENDICHVU,GIATIEN,TRANGTHAI FROM DICHVU; 
END; 



CREATE OR REPLACE PROCEDURE PRO_SUADICHVU( 
  TENDICHVU1 DICHVU.TENDICHVU%TYPE, 
  GIATIEN1 DICHVU.GIATIEN%TYPE, 
  TRANGTHAI1 DICHVU.TRANGTHAI%TYPE, 
  MADICHVU1 DICHVU.MADICHVU%TYPE) 
IS 
BEGIN 
  UPDATE DICHVU SET TENDICHVU=TENDICHVU1,GIATIEN=GIATIEN1,TRANGTHAI=TRANGTHAI1 WHERE MADICHVU=MADICHVU1; 
    EXCEPTION
  WHEN OTHERS THEN
  ROLLBACK;
  RAISE;
  COMMIT; 
END;



CREATE OR REPLACE PROCEDURE PRO_THEMDICHVU( 
  TENDICHVU1 DICHVU.TENDICHVU%TYPE, 
  GIATIEN1 DICHVU.GIATIEN%TYPE) 
IS 
BEGIN 
  INSERT INTO DICHVU(TENDICHVU,GIATIEN,TRANGTHAI) VALUES(TENDICHVU1,GIATIEN1,'Có'); 
  EXCEPTION
  WHEN OTHERS THEN
  ROLLBACK;
  RAISE;
  COMMIT;
END; 



CREATE OR REPLACE PROCEDURE PRO_HIENTHIDSDICHVUTIMKIEM 
( 
IN_TUKHOA NVARCHAR2, 
CONTRO OUT SYS_REFCURSOR 
) 
IS 
BEGIN 
    OPEN CONTRO FOR 
    SELECT * FROM DICHVU 
        WHERE TENDICHVU LIKE ('%'||(IN_TUKHOA)||'%') OR GIATIEN LIKE ('%'||(IN_TUKHOA)||'%') OR TRANGTHAI LIKE ('%'||(IN_TUKHOA)||'%'); 
END;




-- quan ly hoa don


CREATE OR REPLACE PROCEDURE PRO_HIENTHIDSHOADON  
(CONTRO OUT SYS_REFCURSOR) 
IS 
BEGIN 
    OPEN CONTRO FOR 
    SELECT HD.MAHOADON,HD.MAPHONG,KH.HOTEN,HD.TIENPHONG,HD.TIENDICHVU, 
                    HD.NGAYDEN,HD.NGAYDI,NV.HOTEN,HD.TRANGTHAI,HD.TONGTIEN 
        FROM HOADON HD JOIN KHACHHANG KH ON HD.MAKHACHHANG = KH.MAKHACHHANG 
                                        JOIN NHANVIEN NV ON NV.MANHANVIEN=HD.MANHANVIEN; 
END; 




CREATE OR REPLACE PROCEDURE PRO_HIENTHIDSHOADONTIMKIEM 
( 
    IN_TUKHOA NVARCHAR2, 
    CONTRO OUT SYS_REFCURSOR 
) 
AS 
BEGIN 
    OPEN CONTRO FOR 
    SELECT HD.MAHOADON,HD.MAPHONG,KH.HOTEN,HD.TIENPHONG,HD.TIENDICHVU, 
                    HD.NGAYDEN,HD.NGAYDI,NV.HOTEN,HD.TRANGTHAI,HD.TONGTIEN 
        FROM HOADON HD JOIN KHACHHANG KH ON HD.MAKHACHHANG = KH.MAKHACHHANG 
                                        JOIN NHANVIEN NV ON NV.MANHANVIEN=HD.MANHANVIEN 
        WHERE HD.MAPHONG LIKE ('%'||IN_TUKHOA||'%') OR KH.HOTEN LIKE ('%'||IN_TUKHOA||'%') OR 
                        HD.NGAYDEN LIKE (IN_TUKHOA||'%') OR HD.NGAYDI LIKE (IN_TUKHOA||'%') OR NV.HOTEN LIKE ('%'||IN_TUKHOA||'%') OR 
                        HD.TRANGTHAI LIKE ('%'||IN_TUKHOA||'%'); 
END; 




CREATE OR REPLACE PROCEDURE PRO_THANHTOANHOADON( 
IN_MAHOADON HOADON.MAHOADON%TYPE) 
IS 
BEGIN 
UPDATE HOADON 
SET TRANGTHAI='Đã thanh toán' 
WHERE MAHOADON=IN_MAHOADON; 
UPDATE PHONG 
SET TRANGTHAI='Trống' 
WHERE MAPHONG =(SELECT MAPHONG
                FROM HOADON 
                WHERE MAHOADON=IN_MAHOADON); 
UPDATE KHACHHANG 
SET TRANGTHAI='Đã rời đi' 
WHERE MAKHACHHANG=(SELECT MAKHACHHANG 
                                                  FROM HOADON 
                                                  WHERE MAHOADON=IN_MAHOADON); 
  EXCEPTION
  WHEN OTHERS THEN
  ROLLBACK;
  RAISE;
  COMMIT;
END; 



--quan ly thong ke

CREATE OR REPLACE PROCEDURE PRO_THONGKE_NGAY 
( 
    NGAYBD DATE, 
    NGAYKT DATE, 
    CONTRO OUT SYS_REFCURSOR 
) 
IS 
BEGIN 
    OPEN CONTRO FOR 
    SELECT SUM(TONGTIEN),NGAYDI  
        FROM HOADON 
        WHERE NGAYDI >= NGAYBD AND NGAYDI <= NGAYKT AND TRANGTHAI='Đã thanh toán' 
        GROUP BY NGAYDI 
        ORDER BY NGAYDI ; 
END; 




CREATE OR REPLACE PROCEDURE PRO_THONGKE_THANG( 
  NGAYBD DATE, 
  NGAYKT DATE, 
  CONTRO OUT SYS_REFCURSOR) 
IS 
BEGIN 
  OPEN CONTRO FOR  
  SELECT SUM(TONGTIEN),EXTRACT(MONTH FROM NGAYDI),EXTRACT(YEAR FROM NGAYDI) 
  FROM HOADON 
  WHERE NGAYDI >= NGAYBD AND NGAYDI <= NGAYKT 
                        AND TRANGTHAI='Đã thanh toán' 
   GROUP BY  EXTRACT(MONTH FROM NGAYDI),EXTRACT(YEAR FROM NGAYDI) 
   ORDER BY EXTRACT(YEAR FROM NGAYDI),EXTRACT (MONTH FROM NGAYDI); 
END; 





CREATE OR REPLACE PROCEDURE PRO_THONGKE_NAM( 
  NGAYBD DATE, 
  NGAYKT DATE, 
  CONTRO OUT SYS_REFCURSOR) 
IS 
BEGIN 
  OPEN CONTRO FOR  
  SELECT SUM(TONGTIEN),EXTRACT(YEAR FROM NGAYDI) 
  FROM HOADON 
  WHERE NGAYDI >= NGAYBD AND NGAYDI <= NGAYKT 
                        AND TRANGTHAI='Đã thanh toán' 
   GROUP BY  EXTRACT(YEAR FROM NGAYDI) 
   ORDER BY EXTRACT (YEAR FROM NGAYDI); 
END; 


CREATE OR REPLACE PROCEDURE PRO_THONGTINCACPHONG(
  CONTRO OUT SYS_REFCURSOR)
AS
BEGIN
  OPEN CONTRO FOR
  SELECT PHONG.MAPHONG,LOAIPHONG.MALOAIPHONG,TENLOAIPHONG,PHONG.TRANGTHAI,LOAIPHONG.GIAPHONG,KHACHHANG.HOTEN AS TEN_KH, KHACHHANG.CMND AS CMND_KH,HOADON.NGAYDEN, HOADON.NGAYDI,NHANVIEN.HOTEN AS TEN_NV,NHANVIEN.CMND AS CMND_NV,
  HOADON.MAHOADON,HOADON.TRANGTHAI, KHACHHANG.TRANGTHAI
FROM ((((((PHONG LEFT JOIN LOAIPHONG ON PHONG.MALOAIPHONG=LOAIPHONG.MALOAIPHONG)LEFT JOIN HOADON ON PHONG.MAPHONG=HOADON.MAPHONG) LEFT JOIN KHACHHANG ON HOADON.MAKHACHHANG=KHACHHANG.MAKHACHHANG) 
LEFT JOIN NHANVIEN ON HOADON.MANHANVIEN=NHANVIEN.MANHANVIEN)))
MINUS
SELECT PHONG.MAPHONG,LOAIPHONG.MALOAIPHONG,TENLOAIPHONG,PHONG.TRANGTHAI,LOAIPHONG.GIAPHONG,KHACHHANG.HOTEN AS TEN_KH, KHACHHANG.CMND AS CMND_KH,HOADON.NGAYDEN, HOADON.NGAYDI,NHANVIEN.HOTEN AS TEN_NV,NHANVIEN.CMND AS CMND_NV,
  HOADON.MAHOADON,HOADON.TRANGTHAI, KHACHHANG.TRANGTHAI
FROM ((((((PHONG LEFT JOIN LOAIPHONG ON PHONG.MALOAIPHONG=LOAIPHONG.MALOAIPHONG)LEFT JOIN HOADON ON PHONG.MAPHONG=HOADON.MAPHONG) LEFT JOIN KHACHHANG ON HOADON.MAKHACHHANG=KHACHHANG.MAKHACHHANG) 
LEFT JOIN NHANVIEN ON HOADON.MANHANVIEN=NHANVIEN.MANHANVIEN)))
WHERE PHONG.TRANGTHAI='Đang thuê' AND KHACHHANG.TRANGTHAI='Đã rời đi';
--ORDER BY PHONG.MAPHONG;
END;

CREATE OR REPLACE PROCEDURE PRO_DATDICHVUCHOKHACHHANG(
 MAHOADON1 HOADON.MAHOADON%TYPE,
  MADICHVU1 DICHVU.MADICHVU%TYPE,
  SOLUONG1 CHITIETHOADON.SOLUONG%TYPE)
AS
  COUNTT INT;
  SOLUONG2 CHITIETHOADON.SOLUONG%TYPE;
BEGIN
  SELECT COUNT(*) INTO COUNTT FROM CHITIETHOADON WHERE MAHOADON=MAHOADON1 AND MADICHVU=MADICHVU1;
  IF(COUNTT>0) THEN
  SELECT SOLUONG INTO SOLUONG2 FROM CHITIETHOADON WHERE MAHOADON=MAHOADON1 AND MADICHVU=MADICHVU1;
  UPDATE CHITIETHOADON SET SOLUONG=SOLUONG2+SOLUONG1 where MAHOADON=MAHOADON1 AND MADICHVU=MADICHVU1 ;
  END IF;
  IF(COUNTT=0) THEN
  INSERT INTO CHITIETHOADON(MAHOADON,MADICHVU,SOLUONG) VALUES(MAHOADON1,MADICHVU1,SOLUONG1);
  END IF;
  EXCEPTION
  WHEN OTHERS THEN
  ROLLBACK;
  RAISE;
  COMMIT;
END;



-------------------TRIGGER----------------

create or replace TRIGGER TRIG_DICHVU_GIATIEN_LONHON0 
AFTER INSERT OR UPDATE OF GIATIEN 
ON DICHVU 
FOR EACH ROW 
DECLARE 
BEGIN 
  IF(:NEW.GIATIEN<=0) THEN
  RAISE_APPLICATION_ERROR(-2000,'GIA TIEN DICH VU PHAI LON HON 0');
  END IF; 
END;

create or replace TRIGGER TRIG_HOADON_TIENDICHVU 
BEFORE UPDATE OF TIENDICHVU 
ON HOADON 
FOR EACH ROW 
DECLARE 
  TONGTIEN1 HOADON.TONGTIEN%TYPE; 
BEGIN 
  :NEW.TONGTIEN:=:NEW.TIENPHONG+ :NEW.TIENDICHVU; 
END;

create or replace TRIGGER TRIG_HOADON_TIENPHONG_TONGTIEN 
BEFORE INSERT 
ON HOADON 
FOR EACH ROW 
DECLARE 
  MAPHONG1 HOADON.MAPHONG%TYPE; 
  SONGAY INT; 
  GIAPHONG1 LOAIPHONG.GIAPHONG%TYPE; 
  TIENPHONG1 HOADON.TIENPHONG%TYPE; 
BEGIN 
  MAPHONG1:=:NEW.MAPHONG; 
  SELECT GIAPHONG INTO GIAPHONG1 FROM PHONG P JOIN LOAIPHONG LP ON P.MALOAIPHONG=LP.MALOAIPHONG WHERE MAPHONG=:NEW.MAPHONG; 
  TIENPHONG1:=GIAPHONG1*(TRUNC(:NEW.NGAYDI-:NEW.NGAYDEN)+1); 
  :NEW.TIENPHONG:=TIENPHONG1; 
  :NEW.TONGTIEN:=:NEW.TIENDICHVU+TIENPHONG1; 
END;



create or replace TRIGGER TRIG_HOADONDICHVU_THANHTIEN 
BEFORE INSERT OR UPDATE OF SOLUONG 
ON CHITIETHOADON
FOR EACH ROW 
DECLARE 
  GIATIEN1 DICHVU.GIATIEN%TYPE; 
  THANHTIEN1 CHITIETHOADON.THANHTIEN%TYPE; 
  TIENDICHVU1 HOADON.TIENDICHVU%TYPE;
BEGIN 

  SELECT GIATIEN INTO GIATIEN1 FROM DICHVU WHERE MADICHVU=:NEW.MADICHVU; 
  THANHTIEN1:=:NEW.SOLUONG*GIATIEN1; 
  :NEW.THANHTIEN:= THANHTIEN1; 
  SELECT TIENDICHVU INTO TIENDICHVU1 FROM HOADON WHERE MAHOADON=:NEW.MAHOADON;
  UPDATE HOADON SET TIENDICHVU=TIENDICHVU1+THANHTIEN1 
  WHERE MAHOADON=:NEW.MAHOADON;
END;




-----------SEQUENCE------
------SEQUENCE TU DONG TANG CHO CAC BANG
--TABLE KHACHHANG
CREATE SEQUENCE SEQ_TANGMAKHACHHANG INCREMENT BY 1 START WITH 1;
CREATE OR REPLACE TRIGGER TRIG_TANGMAKHACHHANG
BEFORE INSERT ON KHACHHANG
FOR EACH ROW
BEGIN
    :NEW.MAKHACHHANG := SEQ_TANGMAKHACHHANG.NEXTVAL;
END;
--TABLE NHANVIEN
CREATE SEQUENCE SEQ_TANGMANHANVIEN INCREMENT BY 1 START WITH 1;
CREATE OR REPLACE TRIGGER TRIG_TANGMANHANVIEN
BEFORE INSERT ON NHANVIEN
FOR EACH ROW
BEGIN
    :NEW.MANHANVIEN := SEQ_TANGMANHANVIEN.NEXTVAL;
END;
--TABLE DICHVU
CREATE SEQUENCE SEQ_TANGMADICHVU INCREMENT BY 1 START WITH 1;
CREATE OR REPLACE TRIGGER TRIG_TANGMADICHVU
BEFORE INSERT ON DICHVU
FOR EACH ROW
BEGIN
    :NEW.MADICHVU := SEQ_TANGMADICHVU.NEXTVAL;
END;
--TABLE HOADON
CREATE SEQUENCE SEQ_TANGMAHOADON INCREMENT BY 1 START WITH 1;
CREATE OR REPLACE TRIGGER TRIG_TANGMAHOADON
BEFORE INSERT ON HOADON
FOR EACH ROW
BEGIN
    :NEW.MAHOADON := SEQ_TANGMAHOADON.NEXTVAL;
END;
--TABLE TAIKHOAN
CREATE SEQUENCE SEQ_TANGMATAIKHOAN INCREMENT BY 1 START WITH 1;
CREATE OR REPLACE TRIGGER TRIG_TANGMATAIKHOAN
BEFORE INSERT ON TAIKHOAN
FOR EACH ROW
BEGIN
    :NEW.MATAIKHOAN := SEQ_TANGMATAIKHOAN.NEXTVAL;
END;
--TABLE PHIEUDATPHONG
CREATE SEQUENCE SEQ_TANGMAPHIEUDATPHONG INCREMENT BY 1 START WITH 1;
CREATE OR REPLACE TRIGGER TRIG_TANGMAPHIEUDATPHONG
BEFORE INSERT ON PHIEUDATPHONG
FOR EACH ROW
BEGIN
    :NEW.MAPHIEU := SEQ_TANGMAPHIEUDATPHONG.NEXTVAL;
END;
--TABLE LOG
CREATE SEQUENCE SEQ_TANGMALOI INCREMENT BY 1 START WITH 1;
CREATE OR REPLACE TRIGGER TRIG_TANGMALOI
BEFORE INSERT ON LOG
FOR EACH ROW
BEGIN
    :NEW.MALOI := SEQ_TANGMALOI.NEXTVAL;
END;

---
CREATE OR REPLACE PROCEDURE PRO_BATLOI(
IN_TENLOI NVARCHAR2)
IS
PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
INSERT INTO LOG(TENLOI,NGAYLOI) VALUES(IN_TENLOI,TO_DATE(TO_CHAR(SYSDATE,'dd.mm.yyyy HH24:mi:ss')));
COMMIT;
END;


INSERT INTO LOAITAIKHOAN(MALOAITAIKHOAN,TENLOAITAIKHOAN) VALUES(1,'TKGiamDoc');
INSERT INTO LOAITAIKHOAN(MALOAITAIKHOAN,TENLOAITAIKHOAN) VALUES(2,'TKLeTan');
INSERT INTO LOAITAIKHOAN(MALOAITAIKHOAN,TENLOAITAIKHOAN) VALUES(3,'TKKeToan');

COMMIT;

INSERT INTO NHANVIEN VALUES('1','Nguyễn Thị Hoài Thương ',TO_DATE('16/06/1996','DD/MM/YYYY'),TO_DATE('12/03/2009','DD/MM/YYYY'),'859645192','0978568273','1','Nữ','null','Bình Định','Đang làm');
INSERT INTO NHANVIEN VALUES('2','Nguyễn Minh Phát',TO_DATE('15/07/1995','DD/MM/YYYY'),TO_DATE('12/03/2009','DD/MM/YYYY'),'854827924','0978636472','3','Nam','null','Bình Định','Đang làm');
INSERT INTO NHANVIEN VALUES('3','Trần Thị Ngọc Trân',TO_DATE('13/05/1996','DD/MM/YYYY'),TO_DATE('12/03/2009','DD/MM/YYYY'),'756835461','0346597563','3','Nữ','null','Quảng Nam','Đang làm');
INSERT INTO NHANVIEN VALUES('4','Nguyễn Thị Ngọc Trân',TO_DATE('15/07/1995','DD/MM/YYYY'),TO_DATE('24/10/2010','DD/MM/YYYY'),'967858281','0237605794','5','Nữ','null','An Giang','Đang làm');
INSERT INTO NHANVIEN VALUES('5','Nguyễn Thị Thùy Trang',TO_DATE('24/05/1996','DD/MM/YYYY'),TO_DATE('16/07/2009','DD/MM/YYYY'),'756351846','0956254819','1','Nữ','null','Tp. Hồ Chí Minh','Đang làm');
COMMIT;

delete from NHANVIEN ;
COMMIT;

INSERT INTO TAIKHOAN VALUES('1','1','1','admin','123456');
INSERT INTO TAIKHOAN VALUES('2','2','2','abcdef','abc123');
INSERT INTO TAIKHOAN VALUES('3','3','2','tranttn','tran123');
INSERT INTO TAIKHOAN VALUES('4','4','2','letan','letan123456');
INSERT INTO TAIKHOAN VALUES('5','5','1','nhuy','nhuy28799');
COMMIT;

INSERT INTO LOAIPHONG(MALOAIPHONG,TENLOAIPHONG,GIAPHONG) VALUES(1,'Cao cấp',2500000);
INSERT INTO LOAIPHONG(MALOAIPHONG,TENLOAIPHONG,GIAPHONG) VALUES(2,'Bình dân',1500000);
commit;

INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(1,1,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(2,2,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(3,1,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(4,2,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(5,2,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(6,2,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(7,2,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(8,2,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(9,1,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(10,1,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(11,2,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(12,2,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(13,2,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(14,2,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(15,2,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(16,2,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(17,1,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(18,1,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(19,1,'Trống');
INSERT INTO PHONG(MAPHONG,MALOAIPHONG,TRANGTHAI) VALUES(20,1,'Trống');
commit;



INSERT INTO LOAIKHACHHANG(MALOAIKHACHHANG,TENLOAIKHACHHANG) VALUES(1,'VIP');
INSERT INTO LOAIKHACHHANG(MALOAIKHACHHANG,TENLOAIKHACHHANG) VALUES(2,'Thường');
commit;


Insert into KHACHHANG values(1,'1','Khách Hàng 1',TO_DATE('01/01/2000','DD/MM/YYYY'),123456,'Nam','Hồ Chí Minh',null,'0167725444','Đang thuê');
Insert into KHACHHANG values(2,'1','Khách Hàng 2',TO_DATE('01/11/2000','DD/MM/YYYY'),1234567,'Nữ','Hồ Chí Minh',null,'0167725444','Đã rời đi');
Insert into KHACHHANG values(3,1,'Khách Hàng 3',TO_DATE('10/01/1998','DD/MM/YYYY'),1234568,'Nam','Hồ Chí Minh',null,'0167725444','Đã rời đi');
Insert into KHACHHANG values(4,1,'Khách Hàng 4',TO_DATE('01/01/1997','DD/MM/YYYY'),1234569,'Nữ','Hồ Chí Minh',null,'0167725444','Đã rời đi');
Insert into KHACHHANG values(5,2,'Khách Hàng 5',TO_DATE('01/01/2000','DD/MM/YYYY'),1234569,'Nữ','Hồ Chí Minh',null,'0167725444','Đã rời đi');
Insert into KHACHHANG values(6,2,'Khách Hàng 6',TO_DATE('01/01/1999','DD/MM/YYYY'),12345612,'Nam','Hồ Chí Minh',null,'0167725444','Đang thuê');
Insert into KHACHHANG values(7,2,'Khách Hàng 7',TO_DATE('01/01/2000','DD/MM/YYYY'),12345674,'Nữ','Hồ Chí Minh',null,'0167725444','Đang thuê');
Insert into KHACHHANG values(8,2,'Khách Hàng 8',TO_DATE('01/01/1996','DD/MM/YYYY'),12345607,'Nữ','Hồ Chí Minh',null,'0167725444','Đang thuê');
commit;



INSERT INTO DICHVU(TENDICHVU,GIATIEN,TRANGTHAI) VALUES('Dịch vụ Spa',500000,'Có');
INSERT INTO DICHVU(TENDICHVU,GIATIEN,TRANGTHAI) VALUES('Fitness center',200000,'Có');
INSERT INTO DICHVU(TENDICHVU,GIATIEN,TRANGTHAI) VALUES('Sân golf và sân tennis',150000,'Có');
INSERT INTO DICHVU(TENDICHVU,GIATIEN,TRANGTHAI) VALUES('Dịch vụ giặt ủi quần áo',50000,'Có');
INSERT INTO DICHVU(TENDICHVU,GIATIEN,TRANGTHAI) VALUES('Bể bơi 4 mùa',25000,'Có');
INSERT INTO DICHVU(TENDICHVU,GIATIEN,TRANGTHAI) VALUES('Dịch vụ karaoke',145000,'Có');
INSERT INTO DICHVU(TENDICHVU,GIATIEN,TRANGTHAI) VALUES('Dịch vụ phòng 24/24',120000,'Có');
INSERT INTO DICHVU(TENDICHVU,GIATIEN,TRANGTHAI) VALUES('Thu đổi ngoại tệ',50000,'Có');
commit;


INSERT INTO PHIEUDATPHONG VALUES(1,2,1,1,TO_DATE('09/06/2019','DD/MM/YYYY'),TO_DATE('10/06/2019','DD/MM/YYYY'),TO_DATE('12/06/2019','DD/MM/YYYY'));
INSERT INTO PHIEUDATPHONG VALUES(1,2,6,2,TO_DATE('09/06/2019','DD/MM/YYYY'),TO_DATE('10/06/2019','DD/MM/YYYY'),TO_DATE('12/06/2019','DD/MM/YYYY'));
delete from PHIEUDATPHONG;
COMMIT;

